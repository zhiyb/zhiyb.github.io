<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "xhtml1-transitional.dtd">
<?xml-stylesheet type="text/xsl" href="mathml.xsl"?><html xmlns="http://www.w3.org/1999/xhtml" xmlns:pref="http://www.w3.org/2002/Math/preference" pref:renderer="mathplayer-dl"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><link rel="stylesheet" type="text/css" href="opengl-man.css" /><title>glGetProgramStage - OpenGL 4 Reference Pages</title><meta name="generator" content="DocBook XSL Stylesheets V1.78.1" /></head><body><div class="refentry"><a id="glGetProgramStage"></a><div class="titlepage"></div><div class="refnamediv"><h2>Name</h2><p>glGetProgramStage — retrieve properties of a program object corresponding to a specified shader stage</p></div><div class="refsynopsisdiv"><h2>C Specification</h2><div class="funcsynopsis"><table border="0" class="funcprototype-table" summary="Function synopsis" style="cellspacing: 0; cellpadding: 0;"><tr><td><code class="funcdef">void <strong class="fsfunc">glGetProgramStageiv</strong>(</code></td><td>GLuint <var class="pdparam">program</var>, </td></tr><tr><td> </td><td>GLenum <var class="pdparam">shadertype</var>, </td></tr><tr><td> </td><td>GLenum <var class="pdparam">pname</var>, </td></tr><tr><td> </td><td>GLint *<var class="pdparam">values</var><code>)</code>;</td></tr></table><div class="funcprototype-spacer"> </div></div></div><div class="refsect1"><a id="parameters"></a><h2>Parameters</h2><div class="variablelist"><dl class="variablelist"><dt><span class="term"><em class="parameter"><code>program</code></em></span></dt><dd><p>
                    Specifies the name of the program containing shader stage.
                </p></dd><dt><span class="term"><em class="parameter"><code>shadertype</code></em></span></dt><dd><p>
                    Specifies the shader stage from which to query for the subroutine parameter. <em class="parameter"><code>shadertype</code></em>
                    must be one of <code class="constant">GL_VERTEX_SHADER</code>, <code class="constant">GL_TESS_CONTROL_SHADER</code>,
                    <code class="constant">GL_TESS_EVALUATION_SHADER</code>, <code class="constant">GL_GEOMETRY_SHADER</code> or
                    <code class="constant">GL_FRAGMENT_SHADER</code>.
                </p></dd><dt><span class="term"><em class="parameter"><code>pname</code></em></span></dt><dd><p>
                    Specifies the parameter of the shader to query. <em class="parameter"><code>pname</code></em>
                    must be <code class="constant">GL_ACTIVE_SUBROUTINE_UNIFORMS</code>,
                    <code class="constant">GL_ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS</code>,
                    <code class="constant">GL_ACTIVE_SUBROUTINES</code>,
                    <code class="constant">GL_ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH</code>,
                    or <code class="constant">GL_ACTIVE_SUBROUTINE_MAX_LENGTH</code>.
                </p></dd><dt><span class="term"><em class="parameter"><code>values</code></em></span></dt><dd><p>
                    Specifies the address of a variable into which the queried value or values will be placed.
                </p></dd></dl></div></div><div class="refsect1"><a id="description"></a><h2>Description</h2><p>
            <code class="function">glGetProgramStage</code> queries a parameter of a shader stage attached to a program object.
            <em class="parameter"><code>program</code></em> contains the name of the program to which the shader is attached. <em class="parameter"><code>shadertype</code></em>
            specifies the stage from which to query the parameter. <em class="parameter"><code>pname</code></em> specifies which parameter
            should be queried. The value or values of the parameter to be queried is returned in the variable whose address
            is given in <em class="parameter"><code>values</code></em>.
        </p><p>
            If <em class="parameter"><code>pname</code></em> is <code class="constant">GL_ACTIVE_SUBROUTINE_UNIFORMS</code>, the number
            of active subroutine variables in the stage is returned in <em class="parameter"><code>values</code></em>.
        </p><p>
            If <em class="parameter"><code>pname</code></em> is <code class="constant">GL_ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS</code>,
            the number of active subroutine variable locations in the stage is returned in <em class="parameter"><code>values</code></em>.
        </p><p>
            If <em class="parameter"><code>pname</code></em> is <code class="constant">GL_ACTIVE_SUBROUTINES</code>,
            the number of active subroutines in the stage is returned in <em class="parameter"><code>values</code></em>.
        </p><p>
            If <em class="parameter"><code>pname</code></em> is <code class="constant">GL_ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH</code>,
            the length of the longest subroutine uniform for the stage is returned in <em class="parameter"><code>values</code></em>.
        </p><p>
            If <em class="parameter"><code>pname</code></em> is <code class="constant">GL_ACTIVE_SUBROUTINE_MAX_LENGTH</code>,
            the length of the longest subroutine name for the stage is returned in <em class="parameter"><code>values</code></em>. The
            returned name length includes space for the null-terminator.
        </p><p>
            If there is no shader present of type <em class="parameter"><code>shadertype</code></em>, the returned value will be consistent
            with a shader containing no subroutines or subroutine uniforms.
        </p></div><div class="refsect1"><a id="errors"></a><h2>Errors</h2><p>
            <code class="constant">GL_INVALID_ENUM</code> is generated if <em class="parameter"><code>shadertype</code></em> or <em class="parameter"><code>pname</code></em>
            is not one of the accepted values.
        </p><p>
            <code class="constant">GL_INVALID_VALUE</code> is generated if <em class="parameter"><code>program</code></em> is not the name of an
            existing program object.
        </p></div><div class="refsect1"><a id="seealso"></a><h2>See Also</h2><p>
            <a class="citerefentry" href="glGetProgram.xml"><span class="citerefentry"><span class="refentrytitle">glGetProgram</span></span></a>
        </p></div><div class="refsect1"><a id="Copyright"></a><h2>Copyright</h2><p>
            Copyright <span class="trademark"></span>© 2010-2013 Khronos Group.
            This material may be distributed subject to the terms and conditions set forth in
            the Open Publication License, v 1.0, 8 June 1999.
            <a class="ulink" href="http://opencontent.org/openpub/" target="_top">http://opencontent.org/openpub/</a>.
        </p></div></div></body></html>
