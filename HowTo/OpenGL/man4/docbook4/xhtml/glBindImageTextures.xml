<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "xhtml1-transitional.dtd">
<?xml-stylesheet type="text/xsl" href="mathml.xsl"?><html xmlns="http://www.w3.org/1999/xhtml" xmlns:pref="http://www.w3.org/2002/Math/preference" pref:renderer="mathplayer-dl"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><link rel="stylesheet" type="text/css" href="opengl-man.css" /><title>glBindImageTextures - OpenGL 4 Reference Pages</title><meta name="generator" content="DocBook XSL Stylesheets V1.78.1" /></head><body><div class="refentry"><a id="glBindImageTextures"></a><div class="titlepage"></div><div class="refnamediv"><h2>Name</h2><p>glBindImageTextures — bind one or more named texture images to a sequence of consecutive image units</p></div><div class="refsynopsisdiv"><h2>C Specification</h2><div class="funcsynopsis"><table border="0" class="funcprototype-table" summary="Function synopsis" style="cellspacing: 0; cellpadding: 0;"><tr><td><code class="funcdef">void <strong class="fsfunc">glBindImageTextures</strong>(</code></td><td>GLuint <var class="pdparam">first</var>, </td></tr><tr><td> </td><td>GLsizei <var class="pdparam">count</var>, </td></tr><tr><td> </td><td>const GLuint *<var class="pdparam">textures</var><code>)</code>;</td></tr></table><div class="funcprototype-spacer"> </div></div></div><div class="refsect1"><a id="parameters"></a><h2>Parameters</h2><div class="variablelist"><dl class="variablelist"><dt><span class="term"><em class="parameter"><code>first</code></em></span></dt><dd><p>
                    Specifies the first image unit to which a texture is to be bound.
                </p></dd><dt><span class="term"><em class="parameter"><code>count</code></em></span></dt><dd><p>
                    Specifies the number of textures to bind.
                </p></dd><dt><span class="term"><em class="parameter"><code>textures</code></em></span></dt><dd><p>
                    Specifies the address of an array of names of existing texture objects.
                </p></dd></dl></div></div><div class="refsect1"><a id="description"></a><h2>Description</h2><p>
            <code class="function">glBindImageTextures</code> binds images from an array of existing texture objects to a specified
            number of consecutive image units. <em class="parameter"><code>count</code></em> specifies the number of texture
            objects whose names are stored in the array <em class="parameter"><code>textures</code></em>. That number
            of texture names are read from the array and bound to the <em class="parameter"><code>count</code></em> consecutive
            texture units starting from <em class="parameter"><code>first</code></em>.

            If the name zero appears in the <em class="parameter"><code>textures</code></em> array, any existing binding
            to the image unit is reset. Any non-zero entry in <em class="parameter"><code>textures</code></em> must be the
            name of an existing texture object. When a non-zero entry in <em class="parameter"><code>textures</code></em> is
            present, the image at level zero is bound, the binding is considered layered, with the first
            layer set to zero, and the image is bound for read-write access. The image unit format
            parameter is taken from the internal format of the image at level zero of the texture object.
            For cube map textures, the internal format of the positive X image of level zero is used.


            If <em class="parameter"><code>textures</code></em> is <code class="constant">NULL</code> then it is as
            if an appropriately sized array containing only zeros had been specified.
        </p><p>
            <code class="function">glBindImageTextures</code> is equivalent to the following pseudo code:
        </p><pre class="programlisting">    for (i = 0; i &lt; count; i++) {
        if (textures == NULL || textures[i] = 0) {
            glBindImageTexture(first + i, 0, 0, GL_FALSE, 0, GL_READ_ONLY, GL_R8);
        } else {
            glBindImageTexture(first + i, textures[i], 0, GL_TRUE, 0, GL_READ_WRITE, lookupInternalFormat(textures[i]));
        }
    }</pre><p>
        Each entry in <em class="parameter"><code>textures</code></em> will be checked individually and if found
        to be invalid, the state for that image unit will not be changed and an error will be
        generated. However, the state for other texture image units referenced by the command will still
        be updated.
    </p></div><div class="refsect1"><a id="notes"></a><h2>Notes</h2><p>
            <code class="function">glBindImageTextures</code> is available only if the GL version is 4.4 or higher.
        </p><p>
            Note that because <code class="function">glBindImageTextures</code> cannot create new textures (even if
            a name passed has been previously generated by call to <a class="citerefentry" href="glGenTextures.xml"><span class="citerefentry"><span class="refentrytitle">glGenTextures</span></span></a>),
            names pased to <code class="function">glBindTextures</code> must have been bound at least once previously
            via a call to <a class="citerefentry" href="glBindTexture.xml"><span class="citerefentry"><span class="refentrytitle">glBindTexture</span></span></a>.
        </p></div><div class="refsect1"><a id="errors"></a><h2>Errors</h2><p>
            <code class="constant">GL_INVALID_OPERATION</code> is generated if <em class="parameter"><code>first</code></em> + <em class="parameter"><code>count</code></em> is greater
            than the number of image units supported by the implementation.
        </p><p>
            <code class="constant">GL_INVALID_OPERATION</code> is generated if any value in <em class="parameter"><code>textures</code></em> is
            not zero or the name of an existing texture object.
        </p><p>
            <code class="constant">GL_INVALID_OPERATION</code> error is generated if the internal format of the
            level zero texture image of any texture in textures is not supported.
        </p><p>
            <code class="constant">GL_INVALID_OPERATION</code> error is generated if the width, height, or depth
            of the level zero texture image of any texture in textures is zero.
        </p></div><div class="refsect1"><a id="associatedgets"></a><h2>Associated Gets</h2><p>
            <a class="citerefentry" href="glGet.xml"><span class="citerefentry"><span class="refentrytitle">glGet</span></span></a> with argument <code class="constant">GL_TEXTURE_BINDING_1D</code>,
            <code class="constant">GL_TEXTURE_BINDING_2D</code>, <code class="constant">GL_TEXTURE_BINDING_3D</code>, <code class="constant">GL_TEXTURE_BINDING_1D_ARRAY</code>,
            <code class="constant">GL_TEXTURE_BINDING_2D_ARRAY</code>, <code class="constant">GL_TEXTURE_BINDING_RECTANGLE</code>,
            <code class="constant">GL_TEXTURE_BINDING_BUFFER</code>, <code class="constant">GL_TEXTURE_BINDING_CUBE_MAP</code>, <code class="constant">GL_TEXTURE_BINDING_CUBE_MAP</code>,
            <code class="constant">GL_TEXTURE_BINDING_CUBE_MAP_ARRAY</code>,
            <code class="constant">GL_TEXTURE_BINDING_2D_MULTISAMPLE</code>,
            or <code class="constant">GL_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY</code>.
        </p></div><div class="refsect1"><a id="seealso"></a><h2>See Also</h2><p>
            <a class="citerefentry" href="glBindTexture.xml"><span class="citerefentry"><span class="refentrytitle">glBindTexture</span></span></a>,
            <a class="citerefentry" href="glBindTextures.xml"><span class="citerefentry"><span class="refentrytitle">glBindTextures</span></span></a>,
            <a class="citerefentry" href="glDeleteTextures.xml"><span class="citerefentry"><span class="refentrytitle">glDeleteTextures</span></span></a>,
            <a class="citerefentry" href="glGenTextures.xml"><span class="citerefentry"><span class="refentrytitle">glGenTextures</span></span></a>,
            <a class="citerefentry" href="glGet.xml"><span class="citerefentry"><span class="refentrytitle">glGet</span></span></a>,
            <a class="citerefentry" href="glGetTexParameter.xml"><span class="citerefentry"><span class="refentrytitle">glGetTexParameter</span></span></a>,
            <a class="citerefentry" href="glIsTexture.xml"><span class="citerefentry"><span class="refentrytitle">glIsTexture</span></span></a>,
            <a class="citerefentry" href="glTexStorage1D.xml"><span class="citerefentry"><span class="refentrytitle">glTexStorage1D</span></span></a>,
            <a class="citerefentry" href="glTexStorage2D.xml"><span class="citerefentry"><span class="refentrytitle">glTexStorage2D</span></span></a>,
            <a class="citerefentry" href="glTexStorage2DMultisample.xml"><span class="citerefentry"><span class="refentrytitle">glTexStorage2DMultisample</span></span></a>,
            <a class="citerefentry" href="glTexStorage3D.xml"><span class="citerefentry"><span class="refentrytitle">glTexStorage3D</span></span></a>,
            <a class="citerefentry" href="glTexStorage3DMultisample.xml"><span class="citerefentry"><span class="refentrytitle">glTexStorage3DMultisample</span></span></a>,
            <a class="citerefentry" href="glTexBuffer.xml"><span class="citerefentry"><span class="refentrytitle">glTexBuffer</span></span></a>,
            <a class="citerefentry" href="glTexParameter.xml"><span class="citerefentry"><span class="refentrytitle">glTexParameter</span></span></a>
        </p></div><div class="refsect1"><a id="Copyright"></a><h2>Copyright</h2><p>
            Copyright <span class="trademark"></span>© 2013 Khronos Group.
            This material may be distributed subject to the terms and conditions set forth in
            the Open Publication License, v 1.0, 8 June 1999.
            <a class="ulink" href="http://opencontent.org/openpub/" target="_top">http://opencontent.org/openpub/</a>.
        </p></div></div></body></html>
