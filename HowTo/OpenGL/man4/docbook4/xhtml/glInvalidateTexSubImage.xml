<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "xhtml1-transitional.dtd">
<?xml-stylesheet type="text/xsl" href="mathml.xsl"?><html xmlns="http://www.w3.org/1999/xhtml" xmlns:pref="http://www.w3.org/2002/Math/preference" pref:renderer="mathplayer-dl"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><link rel="stylesheet" type="text/css" href="opengl-man.css" /><title>glInvalidateTexSubImage - OpenGL 4 Reference Pages</title><meta name="generator" content="DocBook XSL Stylesheets V1.78.1" /></head><body><div class="refentry"><a id="glInvalidateTexSubImage"></a><div class="titlepage"></div><div class="refnamediv"><h2>Name</h2><p>glInvalidateTexSubImage — invalidate a region of a texture image</p></div><div class="refsynopsisdiv"><h2>C Specification</h2><div class="funcsynopsis"><table border="0" class="funcprototype-table" summary="Function synopsis" style="cellspacing: 0; cellpadding: 0;"><tr><td><code class="funcdef">void <strong class="fsfunc">glInvalidateTexSubImage</strong>(</code></td><td>GLuint <var class="pdparam">texture</var>, </td></tr><tr><td> </td><td>GLint <var class="pdparam">level</var>, </td></tr><tr><td> </td><td>GLint <var class="pdparam">xoffset</var>, </td></tr><tr><td> </td><td>GLint <var class="pdparam">yoffset</var>, </td></tr><tr><td> </td><td>GLint <var class="pdparam">zoffset</var>, </td></tr><tr><td> </td><td>GLsizei <var class="pdparam">width</var>, </td></tr><tr><td> </td><td>GLsizei <var class="pdparam">height</var>, </td></tr><tr><td> </td><td>GLsizei <var class="pdparam">depth</var><code>)</code>;</td></tr></table><div class="funcprototype-spacer"> </div></div></div><div class="refsect1"><a id="parameters"></a><h2>Parameters</h2><div class="variablelist"><dl class="variablelist"><dt><span class="term"><em class="parameter"><code>texture</code></em></span></dt><dd><p>
                    The name of a texture object a subregion of which to invalidate.
                </p></dd><dt><span class="term"><em class="parameter"><code>level</code></em></span></dt><dd><p>
                    The level of detail of the texture object within which the region resides.
                </p></dd><dt><span class="term"><em class="parameter"><code>xoffset</code></em></span></dt><dd><p>
                    The X offset of the region to be invalidated.
                </p></dd><dt><span class="term"><em class="parameter"><code>yoffset</code></em></span></dt><dd><p>
                    The Y offset of the region to be invalidated.
                </p></dd><dt><span class="term"><em class="parameter"><code>zoffset</code></em></span></dt><dd><p>
                    The Z offset of the region to be invalidated.
                </p></dd><dt><span class="term"><em class="parameter"><code>width</code></em></span></dt><dd><p>
                    The width of the region to be invalidated.
                </p></dd><dt><span class="term"><em class="parameter"><code>height</code></em></span></dt><dd><p>
                    The height of the region to be invalidated.
                </p></dd><dt><span class="term"><em class="parameter"><code>depth</code></em></span></dt><dd><p>
                    The depth of the region to be invalidated.
                </p></dd></dl></div></div><div class="refsect1"><a id="description"></a><h2>Description</h2><p>
            <code class="function">glInvalidateTexSubImage</code> invalidates all or part of
            a texture image. <em class="parameter"><code>texture</code></em> and <em class="parameter"><code>level</code></em> indicated
            which texture image is being invalidated. After this command, data in that subregion have undefined
            values. <em class="parameter"><code>xoffset</code></em>, <em class="parameter"><code>yoffset</code></em>, <em class="parameter"><code>zoffset</code></em>, <em class="parameter"><code>width</code></em>, <em class="parameter"><code>height</code></em>, and <em class="parameter"><code>depth</code></em>
            are interpreted as they are in <a class="citerefentry" href="glTexSubImage3D.xml"><span class="citerefentry"><span class="refentrytitle">glTexSubImage3D</span></span></a>. For texture targets that
            don't have certain dimensions, this command treats those dimensions as
            having a size of 1. For example, to invalidate a portion of a two-
            dimensional texture, the application would use <em class="parameter"><code>zoffset</code></em> equal to zero and
            <em class="parameter"><code>depth</code></em> equal to one. Cube map textures are treated as an array of six
            slices in the z-dimension, where a value of <em class="parameter"><code>zoffset</code></em> is interpreted as
            specifying face <code class="constant">GL_TEXTURE_CUBE_MAP_POSITIVE_X</code> + <em class="parameter"><code>zoffset</code></em>.
        </p><p>
            <em class="parameter"><code>level</code></em> must be greater than or equal to zero and be
            less than the base 2 logarithm of the maximum texture width, height, or depth.
            <em class="parameter"><code>xoffset</code></em>, <em class="parameter"><code>yoffset</code></em> and <em class="parameter"><code>zoffset</code></em>
            must be greater than or equal to zero and be less than the width, height or depth
            of the image, respectively. Furthermore, <em class="parameter"><code>xoffset</code></em> + <em class="parameter"><code>width</code></em>,
            <em class="parameter"><code>yoffset</code></em> + <em class="parameter"><code>height</code></em>, and
            <em class="parameter"><code>zoffset</code></em> + <em class="parameter"><code>depth</code></em> must be less
            than or equal to the width, height or depth of the image, respectively.
        </p><p>
            For textures of targets <code class="constant">GL_TEXTURE_RECTANGLE</code>, <code class="constant">GL_TEXTURE_BUFFER</code>, <code class="constant">GL_TEXTURE_2D_MULTISAMPLE</code>, or
            <code class="constant">GL_TEXTURE_2D_MULTISAMPLE_ARRAY</code>, level must be zero.
        </p></div><div class="refsect1"><a id="errors"></a><h2>Errors</h2><p>
            <code class="constant">GL_INVALID_VALUE</code> is generated if <em class="parameter"><code>xoffset</code></em>,
            <em class="parameter"><code>yoffset</code></em> or <em class="parameter"><code>zoffset</code></em> is less than zero,
            or if any of them is greater than the size of the image in the corresponding dimension.
        </p><p>
            <code class="constant">GL_INVALID_VALUE</code> is generated if <em class="parameter"><code>level</code></em> is
            less than zero or if it is greater or equal to the base 2 logarithm of the maximum texture width, height, or depth.
        </p><p>
            <code class="constant">GL_INVALID_VALUE</code> is generated if the target of <em class="parameter"><code>texture</code></em>
            is any of <code class="constant">GL_TEXTURE_RECTANGLE</code>, <code class="constant">GL_TEXTURE_BUFFER</code>, <code class="constant">GL_TEXTURE_2D_MULTISAMPLE</code>, or
            <code class="constant">GL_TEXTURE_2D_MULTISAMPLE_ARRAY</code> and <em class="parameter"><code>level</code></em> is not zero.
        </p><p>
            <code class="constant">GL_INVALID_VALUE</code> is generated if <em class="parameter"><code>texture</code></em> is not the
            name of an existing texture object.
        </p></div><div class="refsect1"><a id="associatedgets"></a><h2>Associated Gets</h2><p>
            <a class="citerefentry" href="glGet.xml"><span class="citerefentry"><span class="refentrytitle">glGet</span></span></a> with argument <code class="constant">GL_MAX_TEXTURE_SIZE</code>
        </p></div><div class="refsect1"><a id="seealso"></a><h2>See Also</h2><p>
            <a class="citerefentry" href="glInvalidateTexImage.xml"><span class="citerefentry"><span class="refentrytitle">glInvalidateTexImage</span></span></a>,,
            <a class="citerefentry" href="glInvalidateBufferSubData.xml"><span class="citerefentry"><span class="refentrytitle">glInvalidateBufferSubData</span></span></a>,
            <a class="citerefentry" href="glInvalidateBufferData.xml"><span class="citerefentry"><span class="refentrytitle">glInvalidateBufferData</span></span></a>,
            <a class="citerefentry" href="glInvalidateFramebuffer.xml"><span class="citerefentry"><span class="refentrytitle">glInvalidateFramebuffer</span></span></a>,
            <a class="citerefentry" href="glInvalidateSubFramebuffer.xml"><span class="citerefentry"><span class="refentrytitle">glInvalidateSubFramebuffer</span></span></a>.
        </p></div><div class="refsect1"><a id="Copyright"></a><h2>Copyright</h2><p>
            Copyright <span class="trademark"></span>© 2013 Khronos Group.
            This material may be distributed subject to the terms and conditions set forth in
            the Open Publication License, v 1.0, 8 June 1999.
            <a class="ulink" href="http://opencontent.org/openpub/" target="_top">http://opencontent.org/openpub/</a>.
        </p></div></div></body></html>
