<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "xhtml1-transitional.dtd">
<?xml-stylesheet type="text/xsl" href="mathml.xsl"?><html xmlns="http://www.w3.org/1999/xhtml" xmlns:pref="http://www.w3.org/2002/Math/preference" pref:renderer="mathplayer-dl"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><link rel="stylesheet" type="text/css" href="opengl-man.css" /><title>glGetActiveAtomicCounterBufferiv - OpenGL 4 Reference Pages</title><meta name="generator" content="DocBook XSL Stylesheets V1.78.1" /></head><body><div class="refentry"><a id="glGetActiveAtomicCounterBufferiv"></a><div class="titlepage"></div><div class="refnamediv"><h2>Name</h2><p>glGetActiveAtomicCounterBufferiv — retrieve information about the set of active atomic counter buffers for a program</p></div><div class="refsynopsisdiv"><h2>C Specification</h2><div class="funcsynopsis"><table border="0" class="funcprototype-table" summary="Function synopsis" style="cellspacing: 0; cellpadding: 0;"><tr><td><code class="funcdef">void <strong class="fsfunc">glGetActiveAtomicCounterBufferiv</strong>(</code></td><td>Gluint <var class="pdparam">program</var>, </td></tr><tr><td> </td><td>GLuint <var class="pdparam">bufferIndex</var>, </td></tr><tr><td> </td><td>GLenum <var class="pdparam">pname</var>, </td></tr><tr><td> </td><td>GLint *<var class="pdparam">params</var><code>)</code>;</td></tr></table><div class="funcprototype-spacer"> </div></div></div><div class="refsect1"><a id="parameters"></a><h2>Parameters</h2><div class="variablelist"><dl class="variablelist"><dt><span class="term"><em class="parameter"><code>program</code></em></span></dt><dd><p>
                    The name of a program object from which to retrieve information.
                </p></dd><dt><span class="term"><em class="parameter"><code>bufferIndex</code></em></span></dt><dd><p>
                    Specifies index of an active atomic counter buffer.
                </p></dd><dt><span class="term"><em class="parameter"><code>pname</code></em></span></dt><dd><p>
                    Specifies which parameter of the atomic counter buffer to retrieve.
                </p></dd><dt><span class="term"><em class="parameter"><code>params</code></em></span></dt><dd><p>
                    Specifies the address of a variable into which to write the retrieved information.
                </p></dd></dl></div></div><div class="refsect1"><a id="description"></a><h2>Description</h2><p>
            <code class="function">glGetActiveAtomicCounterBufferiv</code> retrieves information about the set of active
            atomic counter buffers for a program object. <em class="parameter"><code>program</code></em> is the name of a program
            object for which the command <a class="citerefentry" href="glLinkProgram.xml"><span class="citerefentry"><span class="refentrytitle">glLinkProgram</span></span></a>
            has been issued in the past. It is not necessary for <em class="parameter"><code>program</code></em> to have been linked
            successfully. The link may have failed because the number of active atomic counters exceeded the limits.
        </p><p>
            <em class="parameter"><code>bufferIndex</code></em> specifies the index of an active atomic counter buffer and must be in
            the range zero to the value of <code class="constant">GL_ACTIVE_ATOMIC_COUNTER_BUFFERS</code> minus one. The value
            of <code class="constant">GL_ACTIVE_ATOMIC_COUNTER_BUFFERS</code> for <em class="parameter"><code>program</code></em> indicates the
            number of active atomic counter buffer and can be queried with
            <a class="citerefentry" href="glGetProgram.xml"><span class="citerefentry"><span class="refentrytitle">glGetProgram</span></span></a>.
        </p><p>
            If no error occurs, the parameter(s) specified by <em class="parameter"><code>pname</code></em> are returned in <em class="parameter"><code>params</code></em>.
            If an error is generated, the contents of <em class="parameter"><code>params</code></em> are not modified.
        </p><p>
            If <em class="parameter"><code>pname</code></em> is <code class="constant">GL_ATOMIC_COUNTER_BUFFER_BINDING</code>, then the index of the
            counter buffer binding point associated with the active atomic counter buffer <em class="parameter"><code>bufferIndex</code></em>
            for <em class="parameter"><code>program</code></em> is returned.
        </p><p>
            If <em class="parameter"><code>pname</code></em> is <code class="constant">GL_ATOMIC_COUNTER_BUFFER_DATA_SIZE</code>, then the implementation-dependent
            minimum total buffer object size, in baseic machine units, required to hold all active atomic counters in the
            atomic counter binding point identified by <em class="parameter"><code>bufferIndex</code></em> is returned.
        </p><p>
            If <em class="parameter"><code>pname</code></em> is <code class="constant">GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTERS</code>, then the number of active
            atomic counters for the atomic counter buffer identified by <em class="parameter"><code>bufferIndex</code></em> is returned.
        </p><p>
            If <em class="parameter"><code>pname</code></em> is <code class="constant">GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTER_INDICES</code>,
            then a list of the active atomic counter indices for the atomic counter buffer identified by <em class="parameter"><code>bufferIndex</code></em>
            is returned. The number of elements that will be written into <em class="parameter"><code>params</code></em> is the value of
            <code class="constant">GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTERS</code> for <em class="parameter"><code>bufferIndex</code></em>.
        </p><p>
            If <em class="parameter"><code>pname</code></em> is <code class="constant">GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_VERTEX_SHADER</code>,
            <code class="constant">GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_CONTROL_SHADER</code>,
            <code class="constant">GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_EVALUATION_SHADER</code>,
            <code class="constant">GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_GEOMETRY_SHADER</code>,
            <code class="constant">GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_FRAGMENT_SHADER</code>,
            <code class="constant">GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_COMPUTE_SHADER</code> then a boolean value indicating
            whether the atomic counter buffer identified by <em class="parameter"><code>bufferIndex</code></em> is referenced by the vertex,
            tessellation control, tessellation evaluation, geometry, fragment or compute processing stages of <em class="parameter"><code>program</code></em>,
            respectively, is returned.
        </p></div><div class="refsect1"><a id="notes"></a><h2>Notes</h2><p>
            <code class="function">glGetActiveAtomicCounterBufferiv</code> is available only if the
            GL version is 4.2 or higher.
        </p><p>
            <code class="constant">GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_COMPUTE_SHADER</code> is available
            only of the GL version is 4.3 or higher.
        </p></div><div class="refsect1"><a id="errors"></a><h2>Errors</h2><p>
            <code class="constant">GL_INVALID_VALUE</code> is generated if <em class="parameter"><code>program</code></em> is not the name of a program
            object for which <a class="citerefentry" href="glLinkProgram.xml"><span class="citerefentry"><span class="refentrytitle">glLinkProgram</span></span></a> has been called in the past.
        </p><p>
            <code class="constant">GL_INVALID_VALUE</code> is generated if <em class="parameter"><code>bufferIndex</code></em> is greater than or equal to
            the value of <code class="constant">GL_ACTIVE_ATOMIC_COUNTER_BUFFERS</code> for <em class="parameter"><code>program</code></em>.
        </p><p>
            <code class="constant">GL_INVALID_ENUM</code> is generated if <em class="parameter"><code>pname</code></em> is not one of the accepted tokens.
        </p></div><div class="refsect1"><a id="seealso"></a><h2>See Also</h2><p>
            <a class="citerefentry" href="glGetProgram.xml"><span class="citerefentry"><span class="refentrytitle">glGetProgram</span></span></a>,
            <a class="citerefentry" href="glGetActiveSubroutineUniform.xml"><span class="citerefentry"><span class="refentrytitle">glGetActiveSubroutineUniform</span></span></a>,
            <a class="citerefentry" href="glGetActiveSubroutineUniformName.xml"><span class="citerefentry"><span class="refentrytitle">glGetActiveSubroutineUniformName</span></span></a>,
            <a class="citerefentry" href="glGetUniformLocation.xml"><span class="citerefentry"><span class="refentrytitle">glGetUniformLocation</span></span></a>
        </p></div><div class="refsect1"><a id="Copyright"></a><h2>Copyright</h2><p>
            Copyright <span class="trademark"></span>© 2011-2013 Khronos Group.
            This material may be distributed subject to the terms and conditions set forth in
            the Open Publication License, v 1.0, 8 June 1999.
            <a class="ulink" href="http://opencontent.org/openpub/" target="_top">http://opencontent.org/openpub/</a>.
        </p></div></div></body></html>
