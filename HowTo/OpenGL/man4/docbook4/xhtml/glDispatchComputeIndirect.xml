<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "xhtml1-transitional.dtd">
<?xml-stylesheet type="text/xsl" href="mathml.xsl"?><html xmlns="http://www.w3.org/1999/xhtml" xmlns:pref="http://www.w3.org/2002/Math/preference" pref:renderer="mathplayer-dl"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><link rel="stylesheet" type="text/css" href="opengl-man.css" /><title>glDispatchComputeIndirect - OpenGL 4 Reference Pages</title><meta name="generator" content="DocBook XSL Stylesheets V1.78.1" /></head><body><div class="refentry"><a id="glDispatchComputeIndirect"></a><div class="titlepage"></div><div class="refnamediv"><h2>Name</h2><p>glDispatchComputeIndirect — launch one or more compute work groups using parameters stored in a buffer</p></div><div class="refsynopsisdiv"><h2>C Specification</h2><div class="funcsynopsis"><table border="0" class="funcprototype-table" summary="Function synopsis" style="cellspacing: 0; cellpadding: 0;"><tr><td><code class="funcdef">void <strong class="fsfunc">glDispatchComputeIndirect</strong>(</code></td><td>GLintptr <var class="pdparam">indirect</var><code>)</code>;</td></tr></table><div class="funcprototype-spacer"> </div></div></div><div class="refsect1"><a id="parameters"></a><h2>Parameters</h2><div class="variablelist"><dl class="variablelist"><dt><span class="term"><em class="parameter"><code>indirect</code></em></span></dt><dd><p>
                    The offset into the buffer object currently bound to the
                    <code class="constant">GL_DISPATCH_INDIRECT_BUFFER</code> buffer target at
                    which the dispatch parameters are stored.
                </p></dd></dl></div></div><div class="refsect1"><a id="description"></a><h2>Description</h2><p>
            <code class="function">glDispatchComputeIndirect</code> launches one or more compute
            work groups using parameters stored in the buffer object currently bound
            to the <code class="constant">GL_DISPATCH_INDIRECT_BUFFER</code> target.
            Each work group is processed by the active program object for the compute
            shader stage. While the individual shader invocations within a work group are
            executed as a unit, work groups are executed completely independently and in
            unspecified order. <em class="parameter"><code>indirect</code></em> contains the offset
            into the data store of the buffer object bound to the <code class="constant">GL_DISPATCH_INDIRECT_BUFFER</code>
            target at which the parameters are stored.
        </p><p>
            The parameters addressed by <em class="parameter"><code>indirect</code></em> are packed a structure,
            which takes the form (in C):
            </p><pre class="programlisting">    typedef  struct {
        uint  num_groups_x;
        uint  num_groups_y;
        uint  num_groups_z;
    } DispatchIndirectCommand;</pre><p>
        </p><p>
            A call to <code class="function">glDispatchComputeIndirect</code> is equivalent, assuming no
            errors are generated, to:
            </p><pre class="programlisting">    cmd = (const DispatchIndirectCommand  *)indirect;
    glDispatchComputeIndirect(cmd-&gt;num_groups_x, cmd-&gt;num_groups_y, cmd-&gt;num_groups_z);</pre><p>
        </p><p>
            Unlike <a class="citerefentry" href="glDispatchCompute.xml"><span class="citerefentry"><span class="refentrytitle">glDispatchCompute</span></span></a>,
            no error is generated if any of the <code class="code">num_groups_x</code>,
            <code class="code">num_groups_y</code> or <code class="code">num_groups_z</code> members
            of the <code class="code">DispatchIndirectCommand</code> is larger than the
            value of <code class="constant">GL_MAX_COMPUTE_WORK_GROUP_COUNT</code> for the
            corresponding dimension. In such circumstances, behavior is undefined and
            may lead to application termination.
        </p></div><div class="refsect1"><a id="errors"></a><h2>Errors</h2><p>
            <code class="constant">GL_INVALID_OPERATION</code> is generated if there is no active program
            for the compute shader stage.
        </p><p>
            <code class="constant">GL_INVALID_VALUE</code> is generated if <em class="parameter"><code>indirect</code></em> is
            less than zero or not a multiple of four.
        </p><p>
            <code class="constant">GL_INVALID_OPERATION</code> is generated if no buffer is bound to the
            <code class="constant">GL_DISPATCH_INDIRECT_BUFFER</code> target or if the command would
            source data beyond the end of the buffer object's data store.
        </p></div><div class="refsect1"><a id="associatedgets"></a><h2>Associated Gets</h2><p>
            <a class="citerefentry" href="glGet.xml"><span class="citerefentry"><span class="refentrytitle">glGet</span></span></a> with argument <code class="constant">GL_MAX_COMPUTE_WORK_GROUP_COUNT</code>
        </p></div><div class="refsect1"><a id="seealso"></a><h2>See Also</h2><p>
            <a class="citerefentry" href="glDispatchCompute.xml"><span class="citerefentry"><span class="refentrytitle">glDispatchCompute</span></span></a>.
        </p></div><div class="refsect1"><a id="Copyright"></a><h2>Copyright</h2><p>
            Copyright <span class="trademark"></span>© 2013 Khronos Group.
            This material may be distributed subject to the terms and conditions set forth in
            the Open Publication License, v 1.0, 8 June 1999.
            <a class="ulink" href="http://opencontent.org/openpub/" target="_top">http://opencontent.org/openpub/</a>.
        </p></div></div></body></html>
