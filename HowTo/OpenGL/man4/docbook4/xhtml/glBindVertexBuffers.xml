<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "xhtml1-transitional.dtd">
<?xml-stylesheet type="text/xsl" href="mathml.xsl"?><html xmlns="http://www.w3.org/1999/xhtml" xmlns:pref="http://www.w3.org/2002/Math/preference" pref:renderer="mathplayer-dl"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><link rel="stylesheet" type="text/css" href="opengl-man.css" /><title>glBindVertexBuffers - OpenGL 4 Reference Pages</title><meta name="generator" content="DocBook XSL Stylesheets V1.78.1" /></head><body><div class="refentry"><a id="glBindVertexBuffers"></a><div class="titlepage"></div><div class="refnamediv"><h2>Name</h2><p>glBindVertexBuffers — bind one or more named buffer objects to a sequence of consecutive vertex buffer binding points</p></div><div class="refsynopsisdiv"><h2>C Specification</h2><div class="funcsynopsis"><table border="0" class="funcprototype-table" summary="Function synopsis" style="cellspacing: 0; cellpadding: 0;"><tr><td><code class="funcdef">void <strong class="fsfunc">glBindVertexBuffers</strong>(</code></td><td>GLuint <var class="pdparam">first</var>, </td></tr><tr><td> </td><td>GLsizei <var class="pdparam">count</var>, </td></tr><tr><td> </td><td>const GLuint *<var class="pdparam">buffers</var>, </td></tr><tr><td> </td><td>const GLuintptr *<var class="pdparam">offsets</var>, </td></tr><tr><td> </td><td>const GLsizei *<var class="pdparam">strides</var><code>)</code>;</td></tr></table><div class="funcprototype-spacer"> </div></div></div><div class="refsect1"><a id="parameters"></a><h2>Parameters</h2><div class="variablelist"><dl class="variablelist"><dt><span class="term"><em class="parameter"><code>first</code></em></span></dt><dd><p>
                    Specifies the first vertex buffer binding point to which a buffer object is to be bound.
                </p></dd><dt><span class="term"><em class="parameter"><code>count</code></em></span></dt><dd><p>
                    Specifies the number of buffers to bind.
                </p></dd><dt><span class="term"><em class="parameter"><code>buffers</code></em></span></dt><dd><p>
                    Specifies the address of an array of names of existing buffer objects.
                </p></dd><dt><span class="term"><em class="parameter"><code>offsets</code></em></span></dt><dd><p>
                    Specifies the address of an array of offsets to associate with the binding points.
                </p></dd><dt><span class="term"><em class="parameter"><code>buffers</code></em></span></dt><dd><p>
                    Specifies the address of an array of strides to associate with the binding points.
                </p></dd></dl></div></div><div class="refsect1"><a id="description"></a><h2>Description</h2><p>
            <code class="function">glBindVertexBuffers</code> binds storage from an array of existing buffer objects to a specified
            number of consecutive vertex buffer binding points units. <em class="parameter"><code>count</code></em> specifies the number of buffer
            objects whose names are stored in the array <em class="parameter"><code>buffers</code></em>. That number
            of buffer object names is read from the array and their storage bound to the <em class="parameter"><code>count</code></em> consecutive
            vertex buffer binding points starting from <em class="parameter"><code>first</code></em>.
        </p><p>
            If the name zero appears in the <em class="parameter"><code>buffers</code></em> array, any existing binding
            to the vertex buffer binding point is reset, and the corresponding entries in <em class="parameter"><code>offsets</code></em>
            and <em class="parameter"><code>strides</code></em> is ignored. Any non-zero entry in <em class="parameter"><code>buffers</code></em> must be the
            name of an existing buffer object. When a non-zero entry in <em class="parameter"><code>buffers</code></em> is
            present, that buffer objects data store is bound to the corresponding vertex buffer binding point.
            If <em class="parameter"><code>buffers</code></em> is <code class="constant">NULL</code> then it is as
            if an appropriately sized array containing only zeros had been specified.
        </p><p>
            <em class="parameter"><code>offsets</code></em> and <em class="parameter"><code>strides</code></em> specify the addresses
            of two arrays containing, respectively, the offset of the first element
            and stride between elements in each buffer. If an entry in <em class="parameter"><code>buffers</code></em>
            is zero, then the content of the corresponding entry in each of <em class="parameter"><code>offsets</code></em>
            and <em class="parameter"><code>strides</code></em> is ignored.
        </p><p>
            <code class="function">glBindVertexBuffers</code> is equivalent to the following pseudo code:
        </p><pre class="programlisting">    for (i = 0; i &lt; count; i++) {
        if (buffers == NULL) {
            glBindVertexBuffer(first + i, 0, 0, 16);
        } else {
            glBindVertexBuffer(first + i, buffers[i], offsets[i], strides[i]);
        }
    }</pre><p>
        Each entry in <em class="parameter"><code>buffers</code></em> will be checked individually and if found
        to be invalid, the state for that vertex buffer binding point will not be changed and an error will be
        generated. However, the state for other binding points referenced by the command will still
        be updated.
    </p></div><div class="refsect1"><a id="notes"></a><h2>Notes</h2><p>
            <code class="function">glBindVertexBuffers</code> is available only if the GL version is 4.4 or higher.
        </p></div><div class="refsect1"><a id="errors"></a><h2>Errors</h2><p>
            <code class="constant">GL_INVALID_OPERATION</code> is generated if <em class="parameter"><code>first</code></em> + <em class="parameter"><code>count</code></em> is greater
            than the value of <code class="constant">GL_MAX_VERTEX_ATTRIB_BINDINGS</code>.
        </p><p>
            <code class="constant">GL_INVALID_OPERATION</code> is generated if any value in <code class="constant">buffers</code> is not
            zero or the name of an existing buffer object.
        </p><p>
            <code class="constant">GL_INVALID_VALUE</code> is generated if any value in <em class="parameter"><code>offsets</code></em> or <em class="parameter"><code>strides</code></em>
            is negative, or if a value is <em class="parameter"><code>stride</code></em> is greater than the value of <code class="constant">GL_MAX_VERTEX_ATTRIB_STRIDE</code>.
        </p></div><div class="refsect1"><a id="seealso"></a><h2>See Also</h2><p>
            <a class="citerefentry" href="glGenBuffers.xml"><span class="citerefentry"><span class="refentrytitle">glGenBuffers</span></span></a>,
            <a class="citerefentry" href="glBindBuffer.xml"><span class="citerefentry"><span class="refentrytitle">glBindBuffer</span></span></a>,
            <a class="citerefentry" href="glDeleteBuffers.xml"><span class="citerefentry"><span class="refentrytitle">glDeleteBuffers</span></span></a>
            <a class="citerefentry" href="glDeleteTextures.xml"><span class="citerefentry"><span class="refentrytitle">glDeleteTextures</span></span></a>
        </p></div><div class="refsect1"><a id="Copyright"></a><h2>Copyright</h2><p>
            Copyright <span class="trademark"></span>© 2013 Khronos Group.
            This material may be distributed subject to the terms and conditions set forth in
            the Open Publication License, v 1.0, 8 June 1999.
            <a class="ulink" href="http://opencontent.org/openpub/" target="_top">http://opencontent.org/openpub/</a>.
        </p></div></div></body></html>
